/****************************************************************************
** Meta object code from reading C++ file 'palette widget.hpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.10)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'palette widget.hpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.10. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_PaletteWidget_t {
    QByteArrayData data[17];
    char stringdata0[215];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PaletteWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PaletteWidget_t qt_meta_stringdata_PaletteWidget = {
    {
QT_MOC_LITERAL(0, 0, 13), // "PaletteWidget"
QT_MOC_LITERAL(1, 14, 17), // "shouldAttachColor"
QT_MOC_LITERAL(2, 32, 0), // ""
QT_MOC_LITERAL(3, 33, 12), // "ColorHandle*"
QT_MOC_LITERAL(4, 46, 14), // "shouldSetColor"
QT_MOC_LITERAL(5, 61, 8), // "PixelVar"
QT_MOC_LITERAL(6, 70, 14), // "shouldSetIndex"
QT_MOC_LITERAL(7, 85, 10), // "PixelIndex"
QT_MOC_LITERAL(8, 96, 19), // "paletteColorChanged"
QT_MOC_LITERAL(9, 116, 14), // "shouldShowNorm"
QT_MOC_LITERAL(10, 131, 16), // "std::string_view"
QT_MOC_LITERAL(11, 148, 10), // "initCanvas"
QT_MOC_LITERAL(12, 159, 6), // "Format"
QT_MOC_LITERAL(13, 166, 10), // "setPalette"
QT_MOC_LITERAL(14, 177, 11), // "PaletteSpan"
QT_MOC_LITERAL(15, 189, 11), // "attachIndex"
QT_MOC_LITERAL(16, 201, 13) // "updatePalette"

    },
    "PaletteWidget\0shouldAttachColor\0\0"
    "ColorHandle*\0shouldSetColor\0PixelVar\0"
    "shouldSetIndex\0PixelIndex\0paletteColorChanged\0"
    "shouldShowNorm\0std::string_view\0"
    "initCanvas\0Format\0setPalette\0PaletteSpan\0"
    "attachIndex\0updatePalette"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PaletteWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       5,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   59,    2, 0x06 /* Public */,
       4,    1,   62,    2, 0x06 /* Public */,
       6,    1,   65,    2, 0x06 /* Public */,
       8,    0,   68,    2, 0x06 /* Public */,
       9,    1,   69,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      11,    1,   72,    2, 0x0a /* Public */,
      13,    1,   75,    2, 0x0a /* Public */,
      15,    1,   78,    2, 0x0a /* Public */,
      16,    0,   81,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void, 0x80000000 | 5,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 10,    2,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 12,    2,
    QMetaType::Void, 0x80000000 | 14,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void,

       0        // eod
};

void PaletteWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<PaletteWidget *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->shouldAttachColor((*reinterpret_cast< ColorHandle*(*)>(_a[1]))); break;
        case 1: _t->shouldSetColor((*reinterpret_cast< PixelVar(*)>(_a[1]))); break;
        case 2: _t->shouldSetIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 3: _t->paletteColorChanged(); break;
        case 4: _t->shouldShowNorm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 5: _t->initCanvas((*reinterpret_cast< Format(*)>(_a[1]))); break;
        case 6: _t->setPalette((*reinterpret_cast< PaletteSpan(*)>(_a[1]))); break;
        case 7: _t->attachIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 8: _t->updatePalette(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (PaletteWidget::*)(ColorHandle * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteWidget::shouldAttachColor)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (PaletteWidget::*)(PixelVar );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteWidget::shouldSetColor)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (PaletteWidget::*)(PixelIndex );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteWidget::shouldSetIndex)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (PaletteWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteWidget::paletteColorChanged)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (PaletteWidget::*)(std::string_view );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteWidget::shouldShowNorm)) {
                *result = 4;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject PaletteWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<QScrollArea::staticMetaObject>(),
    qt_meta_stringdata_PaletteWidget.data,
    qt_meta_data_PaletteWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *PaletteWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PaletteWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PaletteWidget.stringdata0))
        return static_cast<void*>(this);
    return QScrollArea::qt_metacast(_clname);
}

int PaletteWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QScrollArea::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void PaletteWidget::shouldAttachColor(ColorHandle * _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void PaletteWidget::shouldSetColor(PixelVar _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void PaletteWidget::shouldSetIndex(PixelIndex _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void PaletteWidget::paletteColorChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void PaletteWidget::shouldShowNorm(std::string_view _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE

/****************************************************************************
** Meta object code from reading C++ file 'palette widget.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.10)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'palette widget.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.10. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_PaletteTableWidget_t {
    QByteArrayData data[18];
    char stringdata0[237];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PaletteTableWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PaletteTableWidget_t qt_meta_stringdata_PaletteTableWidget = {
    {
QT_MOC_LITERAL(0, 0, 18), // "PaletteTableWidget"
QT_MOC_LITERAL(1, 19, 17), // "shouldAttachColor"
QT_MOC_LITERAL(2, 37, 0), // ""
QT_MOC_LITERAL(3, 38, 12), // "ColorHandle*"
QT_MOC_LITERAL(4, 51, 14), // "shouldSetColor"
QT_MOC_LITERAL(5, 66, 8), // "PixelVar"
QT_MOC_LITERAL(6, 75, 14), // "shouldSetIndex"
QT_MOC_LITERAL(7, 90, 10), // "PixelIndex"
QT_MOC_LITERAL(8, 101, 14), // "paletteChanged"
QT_MOC_LITERAL(9, 116, 11), // "PaletteSpan"
QT_MOC_LITERAL(10, 128, 19), // "paletteColorChanged"
QT_MOC_LITERAL(11, 148, 14), // "shouldShowNorm"
QT_MOC_LITERAL(12, 163, 16), // "std::string_view"
QT_MOC_LITERAL(13, 180, 10), // "setPalette"
QT_MOC_LITERAL(14, 191, 10), // "newPalette"
QT_MOC_LITERAL(15, 202, 11), // "attachIndex"
QT_MOC_LITERAL(16, 214, 8), // "newIndex"
QT_MOC_LITERAL(17, 223, 13) // "updatePalette"

    },
    "PaletteTableWidget\0shouldAttachColor\0"
    "\0ColorHandle*\0shouldSetColor\0PixelVar\0"
    "shouldSetIndex\0PixelIndex\0paletteChanged\0"
    "PaletteSpan\0paletteColorChanged\0"
    "shouldShowNorm\0std::string_view\0"
    "setPalette\0newPalette\0attachIndex\0"
    "newIndex\0updatePalette"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PaletteTableWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       6,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   59,    2, 0x06 /* Public */,
       4,    1,   62,    2, 0x06 /* Public */,
       6,    1,   65,    2, 0x06 /* Public */,
       8,    1,   68,    2, 0x06 /* Public */,
      10,    0,   71,    2, 0x06 /* Public */,
      11,    1,   72,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      13,    1,   75,    2, 0x0a /* Public */,
      15,    1,   78,    2, 0x0a /* Public */,
      17,    0,   81,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void, 0x80000000 | 5,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void, 0x80000000 | 9,    2,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 12,    2,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 9,   14,
    QMetaType::Void, 0x80000000 | 7,   16,
    QMetaType::Void,

       0        // eod
};

void PaletteTableWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<PaletteTableWidget *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->shouldAttachColor((*reinterpret_cast< ColorHandle*(*)>(_a[1]))); break;
        case 1: _t->shouldSetColor((*reinterpret_cast< PixelVar(*)>(_a[1]))); break;
        case 2: _t->shouldSetIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 3: _t->paletteChanged((*reinterpret_cast< PaletteSpan(*)>(_a[1]))); break;
        case 4: _t->paletteColorChanged(); break;
        case 5: _t->shouldShowNorm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 6: _t->setPalette((*reinterpret_cast< const PaletteSpan(*)>(_a[1]))); break;
        case 7: _t->attachIndex((*reinterpret_cast< const PixelIndex(*)>(_a[1]))); break;
        case 8: _t->updatePalette(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (PaletteTableWidget::*)(ColorHandle * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::shouldAttachColor)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (PaletteTableWidget::*)(PixelVar );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::shouldSetColor)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (PaletteTableWidget::*)(PixelIndex );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::shouldSetIndex)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (PaletteTableWidget::*)(PaletteSpan );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::paletteChanged)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (PaletteTableWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::paletteColorChanged)) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (PaletteTableWidget::*)(std::string_view );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PaletteTableWidget::shouldShowNorm)) {
                *result = 5;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject PaletteTableWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_PaletteTableWidget.data,
    qt_meta_data_PaletteTableWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *PaletteTableWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PaletteTableWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PaletteTableWidget.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "ColorHandle"))
        return static_cast< ColorHandle*>(this);
    return QWidget::qt_metacast(_clname);
}

int PaletteTableWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void PaletteTableWidget::shouldAttachColor(ColorHandle * _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void PaletteTableWidget::shouldSetColor(PixelVar _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void PaletteTableWidget::shouldSetIndex(PixelIndex _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void PaletteTableWidget::paletteChanged(PaletteSpan _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void PaletteTableWidget::paletteColorChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}

// SIGNAL 5
void PaletteTableWidget::shouldShowNorm(std::string_view _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
