/****************************************************************************
** Meta object code from reading C++ file 'tool.hpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.10)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tool.hpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.10. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ToolCtx_t {
    QByteArrayData data[11];
    char stringdata0[153];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ToolCtx_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ToolCtx_t qt_meta_stringdata_ToolCtx = {
    {
QT_MOC_LITERAL(0, 0, 7), // "ToolCtx"
QT_MOC_LITERAL(1, 8, 16), // "celImageModified"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 15), // "overlayModified"
QT_MOC_LITERAL(4, 42, 14), // "shouldShowNorm"
QT_MOC_LITERAL(5, 57, 16), // "std::string_view"
QT_MOC_LITERAL(6, 74, 14), // "changingAction"
QT_MOC_LITERAL(7, 89, 18), // "shouldGrowCelImage"
QT_MOC_LITERAL(8, 108, 20), // "shouldShrinkCelImage"
QT_MOC_LITERAL(9, 129, 10), // "shouldLock"
QT_MOC_LITERAL(10, 140, 12) // "shouldUnlock"

    },
    "ToolCtx\0celImageModified\0\0overlayModified\0"
    "shouldShowNorm\0std::string_view\0"
    "changingAction\0shouldGrowCelImage\0"
    "shouldShrinkCelImage\0shouldLock\0"
    "shouldUnlock"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ToolCtx[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       8,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   54,    2, 0x06 /* Public */,
       3,    1,   57,    2, 0x06 /* Public */,
       4,    1,   60,    2, 0x06 /* Public */,
       6,    0,   63,    2, 0x06 /* Public */,
       7,    1,   64,    2, 0x06 /* Public */,
       8,    1,   67,    2, 0x06 /* Public */,
       9,    0,   70,    2, 0x06 /* Public */,
      10,    0,   71,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::QRect,    2,
    QMetaType::Void, QMetaType::QRect,    2,
    QMetaType::Void, 0x80000000 | 5,    2,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QRect,    2,
    QMetaType::Void, QMetaType::QRect,    2,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void ToolCtx::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ToolCtx *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->celImageModified((*reinterpret_cast< QRect(*)>(_a[1]))); break;
        case 1: _t->overlayModified((*reinterpret_cast< QRect(*)>(_a[1]))); break;
        case 2: _t->shouldShowNorm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 3: _t->changingAction(); break;
        case 4: _t->shouldGrowCelImage((*reinterpret_cast< QRect(*)>(_a[1]))); break;
        case 5: _t->shouldShrinkCelImage((*reinterpret_cast< QRect(*)>(_a[1]))); break;
        case 6: _t->shouldLock(); break;
        case 7: _t->shouldUnlock(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ToolCtx::*)(QRect ) const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::celImageModified)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)(QRect ) const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::overlayModified)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)(std::string_view ) const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::shouldShowNorm)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)() const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::changingAction)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)(QRect ) const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::shouldGrowCelImage)) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)(QRect ) const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::shouldShrinkCelImage)) {
                *result = 5;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)() const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::shouldLock)) {
                *result = 6;
                return;
            }
        }
        {
            using _t = void (ToolCtx::*)() const;
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolCtx::shouldUnlock)) {
                *result = 7;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ToolCtx::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_ToolCtx.data,
    qt_meta_data_ToolCtx,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ToolCtx::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ToolCtx::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ToolCtx.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ToolCtx::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
    return _id;
}

// SIGNAL 0
void ToolCtx::celImageModified(QRect _t1)const
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 0, _a);
}

// SIGNAL 1
void ToolCtx::overlayModified(QRect _t1)const
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 1, _a);
}

// SIGNAL 2
void ToolCtx::shouldShowNorm(std::string_view _t1)const
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 2, _a);
}

// SIGNAL 3
void ToolCtx::changingAction()const
{
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void ToolCtx::shouldGrowCelImage(QRect _t1)const
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 4, _a);
}

// SIGNAL 5
void ToolCtx::shouldShrinkCelImage(QRect _t1)const
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 5, _a);
}

// SIGNAL 6
void ToolCtx::shouldLock()const
{
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 6, nullptr);
}

// SIGNAL 7
void ToolCtx::shouldUnlock()const
{
    QMetaObject::activate(const_cast< ToolCtx *>(this), &staticMetaObject, 7, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE

