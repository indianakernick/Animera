/****************************************************************************
** Meta object code from reading C++ file 'tool colors widget.hpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.10)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tool colors widget.hpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.10. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ToolColorsWidget_t {
    QByteArrayData data[17];
    char stringdata0[219];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ToolColorsWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ToolColorsWidget_t qt_meta_stringdata_ToolColorsWidget = {
    {
QT_MOC_LITERAL(0, 0, 16), // "ToolColorsWidget"
QT_MOC_LITERAL(1, 17, 13), // "colorsChanged"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 10), // "ToolColors"
QT_MOC_LITERAL(4, 43, 17), // "shouldAttachColor"
QT_MOC_LITERAL(5, 61, 12), // "ColorHandle*"
QT_MOC_LITERAL(6, 74, 17), // "shouldAttachIndex"
QT_MOC_LITERAL(7, 92, 10), // "PixelIndex"
QT_MOC_LITERAL(8, 103, 14), // "shouldShowNorm"
QT_MOC_LITERAL(9, 118, 16), // "std::string_view"
QT_MOC_LITERAL(10, 135, 10), // "initCanvas"
QT_MOC_LITERAL(11, 146, 6), // "Format"
QT_MOC_LITERAL(12, 153, 10), // "setPalette"
QT_MOC_LITERAL(13, 164, 12), // "PaletteCSpan"
QT_MOC_LITERAL(14, 177, 8), // "setIndex"
QT_MOC_LITERAL(15, 186, 19), // "updatePaletteColors"
QT_MOC_LITERAL(16, 206, 12) // "changeColors"

    },
    "ToolColorsWidget\0colorsChanged\0\0"
    "ToolColors\0shouldAttachColor\0ColorHandle*\0"
    "shouldAttachIndex\0PixelIndex\0"
    "shouldShowNorm\0std::string_view\0"
    "initCanvas\0Format\0setPalette\0PaletteCSpan\0"
    "setIndex\0updatePaletteColors\0changeColors"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ToolColorsWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   59,    2, 0x06 /* Public */,
       4,    1,   62,    2, 0x06 /* Public */,
       6,    1,   65,    2, 0x06 /* Public */,
       8,    1,   68,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      10,    1,   71,    2, 0x0a /* Public */,
      12,    1,   74,    2, 0x0a /* Public */,
      14,    1,   77,    2, 0x0a /* Public */,
      15,    0,   80,    2, 0x0a /* Public */,
      16,    0,   81,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void, 0x80000000 | 5,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void, 0x80000000 | 9,    2,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 11,    2,
    QMetaType::Void, 0x80000000 | 13,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void ToolColorsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ToolColorsWidget *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->colorsChanged((*reinterpret_cast< ToolColors(*)>(_a[1]))); break;
        case 1: _t->shouldAttachColor((*reinterpret_cast< ColorHandle*(*)>(_a[1]))); break;
        case 2: _t->shouldAttachIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 3: _t->shouldShowNorm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 4: _t->initCanvas((*reinterpret_cast< Format(*)>(_a[1]))); break;
        case 5: _t->setPalette((*reinterpret_cast< PaletteCSpan(*)>(_a[1]))); break;
        case 6: _t->setIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 7: _t->updatePaletteColors(); break;
        case 8: _t->changeColors(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ToolColorsWidget::*)(ToolColors );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolColorsWidget::colorsChanged)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (ToolColorsWidget::*)(ColorHandle * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolColorsWidget::shouldAttachColor)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (ToolColorsWidget::*)(PixelIndex );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolColorsWidget::shouldAttachIndex)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (ToolColorsWidget::*)(std::string_view );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolColorsWidget::shouldShowNorm)) {
                *result = 3;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ToolColorsWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_ToolColorsWidget.data,
    qt_meta_data_ToolColorsWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ToolColorsWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ToolColorsWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ToolColorsWidget.stringdata0))
        return static_cast<void*>(this);
    return QWidget::qt_metacast(_clname);
}

int ToolColorsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void ToolColorsWidget::colorsChanged(ToolColors _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void ToolColorsWidget::shouldAttachColor(ColorHandle * _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void ToolColorsWidget::shouldAttachIndex(PixelIndex _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void ToolColorsWidget::shouldShowNorm(std::string_view _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE

/****************************************************************************
** Meta object code from reading C++ file 'tool colors widget.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.10)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tool colors widget.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.10. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ActiveColorWidget_t {
    QByteArrayData data[18];
    char stringdata0[226];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ActiveColorWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ActiveColorWidget_t qt_meta_stringdata_ActiveColorWidget = {
    {
QT_MOC_LITERAL(0, 0, 17), // "ActiveColorWidget"
QT_MOC_LITERAL(1, 18, 12), // "colorChanged"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 17), // "shouldAttachColor"
QT_MOC_LITERAL(4, 50, 12), // "ColorHandle*"
QT_MOC_LITERAL(5, 63, 17), // "shouldAttachIndex"
QT_MOC_LITERAL(6, 81, 10), // "PixelIndex"
QT_MOC_LITERAL(7, 92, 14), // "shouldShowNorm"
QT_MOC_LITERAL(8, 107, 16), // "std::string_view"
QT_MOC_LITERAL(9, 124, 10), // "setPalette"
QT_MOC_LITERAL(10, 135, 12), // "PaletteCSpan"
QT_MOC_LITERAL(11, 148, 10), // "newPalette"
QT_MOC_LITERAL(12, 159, 8), // "setIndex"
QT_MOC_LITERAL(13, 168, 5), // "index"
QT_MOC_LITERAL(14, 174, 19), // "updatePaletteColors"
QT_MOC_LITERAL(15, 194, 11), // "attachColor"
QT_MOC_LITERAL(16, 206, 7), // "checked"
QT_MOC_LITERAL(17, 214, 11) // "attachIndex"

    },
    "ActiveColorWidget\0colorChanged\0\0"
    "shouldAttachColor\0ColorHandle*\0"
    "shouldAttachIndex\0PixelIndex\0"
    "shouldShowNorm\0std::string_view\0"
    "setPalette\0PaletteCSpan\0newPalette\0"
    "setIndex\0index\0updatePaletteColors\0"
    "attachColor\0checked\0attachIndex"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ActiveColorWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   59,    2, 0x06 /* Public */,
       3,    1,   60,    2, 0x06 /* Public */,
       5,    1,   63,    2, 0x06 /* Public */,
       7,    1,   66,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       9,    1,   69,    2, 0x0a /* Public */,
      12,    1,   72,    2, 0x0a /* Public */,
      14,    0,   75,    2, 0x0a /* Public */,
      15,    1,   76,    2, 0x08 /* Private */,
      17,    1,   79,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 4,    2,
    QMetaType::Void, 0x80000000 | 6,    2,
    QMetaType::Void, 0x80000000 | 8,    2,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 10,   11,
    QMetaType::Void, 0x80000000 | 6,   13,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Bool,   16,
    QMetaType::Void, QMetaType::Bool,   16,

       0        // eod
};

void ActiveColorWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ActiveColorWidget *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->colorChanged(); break;
        case 1: _t->shouldAttachColor((*reinterpret_cast< ColorHandle*(*)>(_a[1]))); break;
        case 2: _t->shouldAttachIndex((*reinterpret_cast< PixelIndex(*)>(_a[1]))); break;
        case 3: _t->shouldShowNorm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 4: _t->setPalette((*reinterpret_cast< const PaletteCSpan(*)>(_a[1]))); break;
        case 5: _t->setIndex((*reinterpret_cast< const PixelIndex(*)>(_a[1]))); break;
        case 6: _t->updatePaletteColors(); break;
        case 7: _t->attachColor((*reinterpret_cast< const bool(*)>(_a[1]))); break;
        case 8: _t->attachIndex((*reinterpret_cast< const bool(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ActiveColorWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ActiveColorWidget::colorChanged)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (ActiveColorWidget::*)(ColorHandle * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ActiveColorWidget::shouldAttachColor)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (ActiveColorWidget::*)(PixelIndex );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ActiveColorWidget::shouldAttachIndex)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (ActiveColorWidget::*)(std::string_view );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ActiveColorWidget::shouldShowNorm)) {
                *result = 3;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ActiveColorWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<RadioButtonWidget::staticMetaObject>(),
    qt_meta_stringdata_ActiveColorWidget.data,
    qt_meta_data_ActiveColorWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ActiveColorWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ActiveColorWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ActiveColorWidget.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "ColorHandle"))
        return static_cast< ColorHandle*>(this);
    return RadioButtonWidget::qt_metacast(_clname);
}

int ActiveColorWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = RadioButtonWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void ActiveColorWidget::colorChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void ActiveColorWidget::shouldAttachColor(ColorHandle * _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void ActiveColorWidget::shouldAttachIndex(PixelIndex _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void ActiveColorWidget::shouldShowNorm(std::string_view _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
